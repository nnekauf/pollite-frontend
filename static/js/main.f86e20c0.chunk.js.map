{"version":3,"sources":["components/SearchBar.js","actions/zipcodeForm.js","actions/representatives.js","components/Results.js","App.js","reducers/representatives.js","reducers/zipcodeForm.js","store.js","index.js"],"names":["connect","state","zipcodeFormData","zipcodeForm","updateZipcodeForm","zipcode","type","getAllRepresentatives","dispatch","fetch","credentials","method","headers","body","JSON","stringify","then","response","json","r","error","alert","representatives","catch","console","log","onSubmit","e","preventDefault","placeholder","name","value","onChange","event","target","newZipcode","map","App","className","initialState","action","combinedReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"sNAsCeA,eANS,SAAAC,GACpB,MAAO,CACLC,gBAAiBD,EAAME,eAIW,CAACC,kBCtCR,SAACC,GAC9B,MAAO,CACLC,KAAM,sBACND,YDmCsDE,sBE5BvB,SAACF,GAClC,OAAO,SAAAG,GACH,OAAOC,MAAM,yCAA0C,CACnDC,YAAa,UACbC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUV,KAE1BW,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GACCA,EAAEC,MACFC,MAAMF,EAAEC,OAIRZ,EAxBL,CACHF,KAAM,MACNgB,gBAsBwCH,OAIvCI,MAAMC,QAAQC,QFORzB,EAjCG,SAAC,GAAiE,IAAhEI,EAA+D,EAA/DA,kBAAmBG,EAA4C,EAA5CA,sBAAuBL,EAAqB,EAArBA,gBAiB1D,OACI,mCACA,uBAAMwB,SARW,SAAAC,GACjBA,EAAEC,iBACFrB,EAAsBL,IAMtB,UACI,uBAAO2B,YAAa,gBAAgBC,KAAM,UAAUC,MAAS7B,EAAgBG,QAAS2B,SAlBzE,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAERI,EAAU,2BACXjC,GADW,kBAEb4B,EAAOC,IAEV3B,EAAkB+B,MAYd,uBAAQ7B,KAAO,SAASyB,MAAQ,mBGP7B/B,eANS,SAAAC,GACpB,MAAO,CACLqB,gBAAiBrB,EAAMqB,mBAIdtB,EAhBC,SAAC,GAAuB,IAAtBsB,EAAqB,EAArBA,gBAGd,OACI,mCACCA,EAAgBc,KAAK,SAAAjB,GAAC,OAAI,oCAAOA,EAAP,eCQpBkB,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,gCACqB,uBACnB,cAAC,EAAD,IAFF,IAEe,uBACb,cAAC,EAAD,Q,OCLKC,EAAe,GCN1B,IAAMA,EAAe,CACjBlC,QAAS,IAaIF,EAVK,WAAmC,IAAlCF,EAAiC,uDAAzBsC,EAAcC,EAAW,uCACpD,OAAQA,EAAOlC,MACb,IAAK,sBACH,OAAOkC,EAAOnC,QAChB,IAAK,qBACH,OAAOkC,EACT,QACE,OAAOtC,I,gBCLTwC,EAAkBC,0BAAgB,CACtCpB,gBFAa,WAAwD,IAA/BrB,EAA8B,uDAAtBsC,EAAcC,EAAQ,uCAClE,OAAQA,EAAOlC,MACb,IAAK,MACH,OAAOkC,EAAOlB,gBAChB,QACE,OAAOrB,IEJbE,gBAGIwC,EAAmBC,OAAOC,sCAAwCC,UAKzDC,EAHDC,sBAAYP,EAAiBE,EAAiBM,0BAAgBC,O,QCH5EC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,QAINM,SAASC,eAAe,W","file":"static/js/main.f86e20c0.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getAllRepresentatives } from '../actions/representatives'\nimport {updateZipcodeForm } from '../actions/zipcodeForm'\n\nconst SearchBar = ({updateZipcodeForm, getAllRepresentatives, zipcodeFormData}) => {\n\n    const handleChange = event => {\n        const { name, value } = event.target\n        // debugger\n        const newZipcode = {\n          ...zipcodeFormData,\n          [name]: value\n        }\n        updateZipcodeForm(newZipcode)  \n    }\n    const handleSubmit = e => {\n        e.preventDefault()\n        getAllRepresentatives(zipcodeFormData)\n\n    }\n    \n    return (\n        <>\n        <form onSubmit={handleSubmit}>\n            <input placeholder= \"Enter Zipcode\" name =\"zipcode\" value = {zipcodeFormData.zipcode} onChange={handleChange}/>  \n            < input type = \"submit\" value = \"Submit\" />\n        </form>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n      zipcodeFormData: state.zipcodeForm,\n      \n    }\n  }\nexport default connect (mapStateToProps,{updateZipcodeForm, getAllRepresentatives} )(SearchBar)","export const updateZipcodeForm = (zipcode) => {\n    return {\n      type: \"UPDATE_ZIPCODE_FORM\",\n      zipcode\n    }\n  }\n  \n  export const resetZipcodeForm = () => {\n    return {\n      type: \"RESET_ZIPCODE_FORM\"\n    }\n  }","\nexport const showAllRepresentatives = representatives => {\n   \n    return {\n        type: \"ALL\",\n        representatives\n    }\n   \n}\n\nexport const getAllRepresentatives = (zipcode) => {\n    return dispatch => {\n        return fetch(\"http://localhost:3000/api/v1/find_reps\", {\n            credentials: \"include\",\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(zipcode)\n        })\n        .then (response => response.json())\n        .then (r => {\n            if (r.error) {\n                alert(r.error)\n            } else {\n                \n              \n                dispatch(showAllRepresentatives(r))\n    \n            }\n        })\n        .catch(console.log)\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Results = ({representatives}) => {\n\n    \n    return (\n        <>\n        {representatives.map (r => <div> {r} </div>  )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n      representatives: state.representatives,\n      \n    }\n  }\nexport default connect (mapStateToProps)(Results)","import React from 'react'\n// import {connect} from 'react-redux'\nimport './App.css';\nimport SearchBar from \"./components/SearchBar\"\nimport Results from \"./components/Results\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      Welcome to Pollite <br/>\n      <SearchBar/> <br/>\n      <Results/>\n    </div>\n  );\n}\n\nexport default App;\n","// const initialState = {\n//     state: \"\",\n//     city: \"\",\n//     zipcode: \"\",\n//     officials: \"\"\n// }  \n     const initialState = []   \nexport default function representatives(state = initialState, action) {\n    switch (action.type) {\n      case \"ALL\":\n        return action.representatives\n      default:\n        return state\n    }\n  }","const initialState = {\n    zipcode: \"\"\n  }\n  \n  const zipcodeForm = (state = initialState, action) => {\n    switch (action.type) {\n      case \"UPDATE_ZIPCODE_FORM\":\n        return action.zipcode\n      case \"RESET_ZIPCODE_FORM\":\n        return initialState\n      default:\n        return state\n    }\n  }\n  export default zipcodeForm","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\nimport representatives from './reducers/representatives'\nimport zipcodeForm from './reducers/zipcodeForm'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nconst combinedReducer = combineReducers({\n  representatives, \n  zipcodeForm,\n \n})\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(combinedReducer, composeEnhancers(applyMiddleware(thunk)))\n\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store.js'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\n\n\n\nReactDOM.render(\n  <Router >\n    <Provider store={store}>\n        <App/>\n    </Provider>\n  </Router>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}